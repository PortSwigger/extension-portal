name: Notify Zoom

on:
  workflow_call:
    inputs:
      payload:
        description: 'JSON payload to send to Zoom webhook'
        required: true
        type: string
    secrets:
      ZOOM_WEBHOOK_URL:
        required: true
      ZOOM_VERIFICATION_TOKEN:
        required: true

permissions:
  contents: read

jobs:
  notify:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Send Zoom webhook notification
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7
        with:
          script: |
            const payload = JSON.parse(process.env.PAYLOAD);
            const webhookUrl = `${process.env.ZOOM_WEBHOOK_URL}?format=fields`;

            const response = await fetch(webhookUrl, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': process.env.ZOOM_VERIFICATION_TOKEN
              },
              body: JSON.stringify(payload)
            });

            if (!response.ok) {
              const errorText = await response.text();
              core.warning(`Zoom webhook error: ${response.status} - ${errorText}`);
            } else {
              core.info('Successfully sent webhook notification to Zoom');
            }
        env:
          ZOOM_WEBHOOK_URL: ${{ secrets.ZOOM_WEBHOOK_URL }}
          ZOOM_VERIFICATION_TOKEN: ${{ secrets.ZOOM_VERIFICATION_TOKEN }}
          PAYLOAD: ${{ inputs.payload }}
